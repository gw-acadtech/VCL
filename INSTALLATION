Installing VCL 2.1

Contents:

  I. Database (MySQL)
 II. Web (frontend)
III. Management Node (backend)
 IV. Adding extra local accounts
  V. Adding LDAP authentication

I. Database (MySQL)

Prerequisites:
MySQL 5 installed and running

Installation:

1.  create a database in mysql named for use with VCL

   CREATE DATABASE vcl;

2. create a user with SELECT, INSERT, UPDATE, and DELETE privileges on the database you just created

   ** NOTE: Replace vcluserpassword with your own password!

   GRANT SELECT,INSERT,UPDATE,DELETE ON vcl.* TO 'vcluser'@'localhost' IDENTIFIED BY 'vcluserpassword';

3. import vcl.sql file into database

   mysql vcl < vcl.sql



II. Web (frontend)

Prerequisites:
Your web server should meet the following criteria before installing the VCL Frontend Code:

   * Apache HTTP Server v1.3 or v2.x with SSL enabled - while VCL may run under another webserver capable of running PHP code, it has only been tested to work with Apache HTTP Server
   * PHP 5
   * php modules that should be installed (depending on your Linux distro, some of these may be compiled in to php instead of being a separate module):
      - php-gd
      - php-json
      - php-mcrypt
      - php-mysql
      - php-openssl
      - php-sysvsem
      - php-xml
      - php-xmlrpc
   * useful to have the server set up to be able to send debugging emails
   * php-mcrypt requires libmcrypt and mcrypt libraries as dependencies. These may need to be installed first.

Installation:

1. move the web directory somewhere that your web server can access it (you'll probably also want to rename it to 'vcl')

   ex: mv web /var/www/html/vcl

2. modify vcl/.ht-inc/secrets.php
   * set $vclhost, $vcldb, $vclusername, and $vclpassword to match your database setup
   * create random passwords for $mcryptkey, $mcryptiv, and $pemkey - $mcryptiv must be 8 hex characters

3. run the genkeys.sh script from within vcl/.ht-inc and give it $pemkey from secrets.php as the passphrase (3 times, copy/paste is a good idea here)

4. modify vcl/.ht-inc/conf.php to match your site - COOKIEDOMAIN needs to be the domain name your web server is using, or left blank if you are accessing it by IP only

5. *NOTICE* JpGraph 2.x is no longer available. JpGraph 3.x is released under a dual license. QPL 1.0 (Qt Free Licensee). Free for non-commercial, open-source or educational use (JpGraph Professional License for commercial use). If you are planning to use this for commercial use and don't want to pay for JpGraph, you can safely skip this step with the only side effect of not being able to display a few graphs on the statistics page.
   Download JpGraph from http://www.aditus.nu/jpgraph/jpdownload.php
   * For PHP5, download the 3.x series, extract it, and copy the src directory from it to vcl/.ht-inc/jpgraph

6. download version 0.4.0 of Dojo Toolkit: http://download.dojotoolkit.org/release-0.4.0/dojo-0.4.0-ajax.tar.gz
   * extract it under the vcl directory and rename "dojo-0.4.0-ajax" to "dojoAjax"

7. download version 1.1.0 of Dojo Toolkit: http://download.dojotoolkit.org/release-1.1.0/dojo-release-1.1.0.tar.gz
   * extract it under the vcl directory and rename "dojo-release-1.1.0" to "dojo"

8. go into the themes directory (vcl/themes) and run "./copydojocss.sh default" to copy parts of dojo's css into the "default" theme

9. if you want to be able to edit any of the documentation that comes bundled with the vcl web code, download fckeditor from http://www.fckeditor.net/download (most people can skip this step)
       * extract it under the vcl directory

10. open a browser and open the testsetup.php page
       * i.e. if you set up your site to be https://my.server.org/vcl/ open https://my.server.org/vcl/testsetup.php

11. debug any issues reported by testsetup.php

12. now, open the index.php page in your browser

13. select Local Account and use 'admin' as the user and 'adminVc1passw0rd' as the password

14. click the "Management Nodes" link

15. enter the hostname and IP of your management node

16. click Add

17. fill in "Install Path" - this is parent directory under which image files will be stored

18. click "Confirm Management Node"

19. click Submit

20. click the "Management Nodes" link

21. select "Edit Management Node Grouping"

22. click Submit

23. select the checkbox for your management node

24. click Submit

25. click "Manage Computers"

26. select the "Add Single Computer" radio button

27. click the Submit

28. fill in Hostname, IP Address, owner (admin@Local), RAM, Proc Speed, Network Speed, select "blade" for Type, select "xCAT 1.x Provisioning" for "Provisioning Engine", and click the checkbox under "allcomputers", and "newimages"
       Note: if using using vmware, select "virtualmachine" for Type and "VMWare Server Provisioning" for "Provisioning Engine"

29. click Confirm Computer

30. click Submit (don't worry about the fact that the computer you just added isn't listed after clicking Submit)

31. after you've configured your image library and your management node has started checking in, you should be able to make a reservation



III. Management Node (backend)

Tested on CentOS5, Red Hat Advanced Server 4,5, RedHat Fedora Core Operating systems.

Prerequisites:
MySQL 5 client
Nmap - security scanner
openssh clent - All distros usually have this installed by default.
Perl 5.8.0 or later
perl modules SEE STEP 2 below in Installation (some of these may be built in for your distro):
- MailTools-2.04
- Class-Data-Inheritable-0.08
- Devel-StackTrace-1.20
- Exception-Class-1.26
- Object-InsideOut-3.52
- Module-Build-0.30
- Net-XMPP-1.02
- GSSAPI-0.26
- Digest-SHA1-2.12
- Digest-HMAC-1.01
- GBARR/Authen-SASL-2.12
- XML-Stream-1.22
- Net-Jabber-2.0
- YAML-0.68
- RPC-XML-0.64
- XML-Parser-2.36
- Crypt-SSLeay-0.57
- Compress-Raw-Zlib-2.020
- IO-Compress-2.020
- DBI-1.609
- libwww-perl-5.827
- HTTP-Headers

Installation:

1. move the managementnode directory to /usr/local/ and rename it to vcl.

	ex. mv managementnode /usr/local/vcl

2. Install Required perl modules.

	A script is provided in the VCL repository called install_perl_libs.pl which will attempt to download and install the required perl libraries.  Run the script:

	perl /usr/local/vcl/bin/install_perl_libs.pl

	A large amount of output will be displayed on the console the first time the script is run.  It will pause if any of the module installations ask for configuration information. Accept all of the defaults by pressing enter when this happens.

	Run the script a 2nd time to check if all of the modules the script is configured to install were successfully installed. Output similar to the following should be displayed for each module:

	==============================================================================
	URL: http://search.cpan.org/CPAN/authors/id/T/TI/TIMB/DBI-1.609.tar.gz
	Module filename: DBI-1.609.tar.gz
	Module name: DBI-1.609
	Module package: DBI
	Checking if DBI is installed
	Module is already installed: DBI
	==============================================================================
	
	Additional output will be displayed if a module has not been successfully installed.  You will need to troubleshoot if any modules were not installed successfully.

3. Configure vcld.conf

   1. Create the /etc/vcl directory:
      mkdir /etc/vcl 
   2. Copy the generic vcld.conf file to /etc/vcl:
      cp /usr/local/vcl/etc/vcl/vcld.conf /etc/vcl
   3. Edit the /etc/vcl/vcld.conf file:
      vi /etc/vcl/vcld.conf
      The following lines must be configured in order to start the VCL daemon (vcld) and allow it to check in to the database:
          * FQDN - the fully qualified name of the management node, this should match the name that was configured for the management node in the database
          * server - the IP address or FQDN of the database server
          * LockerWrtUser - database user account with write privileges
          * wrtPass - database user password
   4. Save the vcld.conf file

4. Install the VCL Daemon (vcld) Service

   1. Copy the vcld service script to /etc/init.d and name it vcld:
      cp /usr/local/vcl/bin/S99vcld.linux /etc/init.d/vcld
   2. Add the vcld service using chkconfig:
      /sbin/chkconfig --add vcld
   3. Configure the vcld service to automatically run at runtime levels 3-5:
      /sbin/chkconfig --level 345 vcld on

5. Start and Check the vcld Service

   1. Start the vcld service:
      /sbin/service vcld start
      You should see output similar to the following:

      Starting vcld daemon: BIN PATH: /usr/local/vcl/bin
      pre-execution: config file being used: /etc/vcl/vcld.conf
      FQDN is not listed
      pre-execution: process name is set to: vcld
      pre-execution: verbose mode is set to: 1
      pre-execution: testing mode is set to: 0
      pre-execution: log file being used: /var/log/vcld.log
      pre-execution: PID file being used: /var/run/vcld.pid
      Created process 23696 renamed to vcld ...
                                                                 [  OK  ]
      Note: the vcld service can also be started by running the service script directly:
      /etc/init.d/vcld start

   2. Check the vcld service by monitoring the vcld.log file:

      tail -f /var/log/vcld.log

      You should see the following being added to the log file every few seconds if the management node is checking in with the database:

      2009-06-16 16:57:15|15792|vcld:main(165)|lastcheckin time updated for management node 18: 2009-06-16 16:57:15

6. Provisioning Engines and Hypervisors
                        
VCL supports the following, please see the related site for installation and setup.
xCAT - 
Extreme Cluster Administration Tool versions 1.3 and 2.1.
http://xcat.sourceforge.net/

VMware - 
Free server 1.x, ESX standard Server, ESXi
http://www.vmware.com
Vmware toolkit - http://www.vmware.com/support/developer/viperltoolkit/ 



IV. Adding extra local accounts

There's not currently a tool for this.  You will need to add entries directly to the database.
1) add entry to user table
INSERT INTO user (unityid, firstname, lastname, email, lastupdated) VALUES ('myusername', 'myfirstname', 'mylastname', 'myemailaddr', NOW());
2) find out the id generated for that user
SELECT id, unityid FROM user WHERE unityid = 'myusername';
3) add entry to the localauth table
INSERT INTO localauth (userid, salt, passhash, lastupdated) VALUES ('place1', 'place2', 'place3', NOW())
with place1 = id from step 2
     place2 = an 8 char random string
     place3 = sha1sum( desired password with place2 stuck on the end )
              this can be generated under linux like this (using 'thedog' as the password and 11111111 as place2):
                 echo -n 'thedog11111111' | sha1sum
Once a user has been added, the user can go to User Preferences to change his/her password



V. Adding LDAP authentication

1) fill in the necessary information in vcl/.ht-inc/conf.php
2) add an entry to the affiliation table and use the id for that entry as 'affiliationid' for your new entry in vcl/.ht-inc/conf.php
3) uncomment the 'require_once(".ht-inc/authmethods/ldapauth.php");' line in in vcl/.ht-inc/conf.php
